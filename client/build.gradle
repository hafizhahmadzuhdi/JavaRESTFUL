plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.4' // for making JSON work in executable JAR file!
    id 'java'
}

shadowJar {
    archiveName = 'client.jar'
    manifest {
        attributes 'Main-Class': 'sot.rest.client.MyClient'
    }
    mergeServiceFiles()    //shadow feature for Merging Service Descriptor Files
}


group 'rest-gradle'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()

    flatDir { //include all *.jar files from local "lib" directory (e.g., serviceModel.jar)
        dirs 'lib'
    }

}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-client
    compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.28'
    // https://mvnrepository.com/artifact/org.glassfish.jersey.inject/jersey-hk2
    compile group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.28'
    // https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api
    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    // https://mvnrepository.com/artifact/javax.activation/activation
    compile group: 'javax.activation', name: 'activation', version: '1.1.1'
    // https://mvnrepository.com/artifact/com.owlike/genson
    compile group: 'com.owlike', name: 'genson', version: '1.4'

    //include all *.jar files from local "lib" directory (e.g., serviceModel.jar)
    compile files(fileTree(dir: 'lib', includes: ['*.jar']))

}

jar { // make executable client.jar file and copy all dependencies in it
    manifest {
        attributes 'Main-Class': 'sot.rest.client.MyClient'
    }
    archiveName = 'client.jar'

    // add all dependencies to the executable .jar file
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

}

repositories {
    mavenCentral()
    flatDir { //include all *.jar files from local "lib" directory (e.g., serviceModel.jar)
        dirs 'lib'
    }
}


dependencies {

    // all other necesasry dependencies Jersey, activation, genson â€¦

    //include all *.jar files from local "lib" directory (e.g., serviceModel.jar)
    compile files(fileTree(dir: 'lib', includes: ['*.jar']))
}


